name: 1.4$(rev:.r).0
resources:
- repo: self
pool:
  vmImage: 'windows-latest'

trigger:
- master
variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'VS2019'
steps:

- task: bleddynrichards.Assembly-Info-Task.Assembly-Info-Task.Assembly-Info-NetFramework@2
  displayName: 'Set Assembly Manifest Data'
  inputs:
    FileNames: '**\AssemblyInfo.cs'
    VersionNumber: '$(build.buildnumber)'
    FileVersionNumber: '$(build.buildnumber)'

- task: geeklearningio.gl-vsts-tasks-file-patch.xml-patch-task.XmlPatch@3
  displayName: 'Update VSIX version'
  inputs:
    XmlWorkingDir: GitFlow.VS.Extension
    XmlTargetFilters: source.extension.2019.vsixmanifest
    Namespaces: 'vsix => http://schemas.microsoft.com/developer/vsx-schema/2011'
    JsonPatchContent: '= /vsix:PackageManifest/vsix:Metadata/vsix:Identity/@Version=> "$(build.buildNumber)"'
    OutputPatchFile: true
    FailIfNoPatchApplied: true

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    checkLatest: true

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: GitFlow.VS.sln

- task: VSBuild@1
  displayName: 'Build solution GitFlow.VS.sln'
  inputs:
    solution: GitFlow.VS.sln
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\*test*.dll
     !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    testFiltercriteria: FullyQualifiedName~GitFlowWrapperTests
  enabled: false

- task: CopyFiles@2
  displayName: 'Copy marketplace files'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
     **\bin\$(BuildConfiguration)\*.vsix
     README.md
     extension.manifest.json
    TargetFolder: '$(build.artifactstagingdirectory)'
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy images'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
     Images\*.*
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'